<21년1월3일>
-파이썬으로 백준 문제 풀기 시작
-매일 최소 한 문제 풀기
-깃 연동하는 건 그냥 colne하면 되는 것..
<21년 1월20일>
-10단계 재귀 알고리즘이.. 나한테 제일 어려운 것 같다
-2231문제와 4773문제를 같이 봐보기,2231문제 refactoring 해보기
<1월 24>
-2108번 미해결
-10989번 런타임 및 메모리, 시간 에러 많이 났었음.,
<1월25일>
-2108번 해결 https://docs.python.org/3/library/collections.html#collections.Counter
  ->counter를 사용하여 해결하면 간결하고 깔끔하게 코드 작성 가능하다
-11650 :람다식 공부하기
sort와 sorted의 차이

<1월26>
-백트래킹 공부 : https://covenant.tistory.com/123
-dfs,bfs공부

<1월27,28일>
-n-queens 문제 풀긴 했는데 시간초과가 났다.  pypy3로 돌려보니까 시간초과가 안남
-14888번 백트래킹 문제 문제는 풀리는데 시간초과가 난다.
-14888번 같은 경우 재귀로 풀기가 파이썬으로는 쉽지 않다. permutations함수를 사용하여 for문을 중첩하는 방향으로하여 풀었다
<1월29>
-14889번(2)풀이에서 range관련 주석부분 중요!

<2월4>
-1463번! 동적계획법과 백트래킹 알고리즘을 엮어서 풀었다! 그냥 백트래킹만으로 풀었을 땐 오류가 나지만 메모라이제이션 기법을 사용햇더니
풀렸다
<2월5>
-10844 역시 백트래킹만으로는 시간초과가 해결되지 않느다
-10844(2) 동적계획으로 풀어야만 한다.

<2월8일>
-9251번 (LCS문제)
LCS알고리즘 공부하기
출처 : https://twinw.tistory.com/126
-1912.. 완전히 이해하지는 못함

<2월12>
-그리디 ... 1541..그냥 문자열 처리 같은데,, 너무 돌아간듯..
<2월13일>
-(정수및 조합론폴더)
-최대 공약수 , 최소 공배수 구하는 것은 기억하고 있기
<2.14>
2004번 factorial 문제 .. 단순히 factorial을 구하는 것이 아님 nCk에서 5,2 쌍이 몇개가 있는 지 ..
-그냥 풀면 메모리 초과, 시간 초과, 재귀 최대 깊이 초과 등등 오류 발생 ( 백준 들어가서 내가 제출한 풀이 봐보기)
-2004번 문제 중요 나중에 다시 보기
<2.17>
스택-17298 나중에 다시 한번 풀어보기 스택이란 개념을 이해하기 좋다

-큐-18258번 deque를 이용해야 시간초과 해결할 수 있다
-> pop()함수를 구현할 때 list.pop(0)을 이용하면 뒤에 있는 데이터들이 한 칸씩 옮겨야 함으로 O(n)시간이 걸리게 된다.
-11866 큐로도 풀기
-5430.. reverse()함수는 O(n)함수이다... 시간 초과 발생의 주요인이다!!!!

-2.23
https://shoark7.github.io/
재미있는 사이트 발견
-2.24
-피보나치:https://www.acmicpc.net/blog/view/28
-6549번 https://velog.io/@piopiop/%EB%B0%B1%EC%A4%80-6549-%ED%9E%88%EC%8A%A4%ED%86%A0%EA%B7%B8%EB%9E%A8%EC%97%90%EC%84%9C-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95%ED%8C%8C%EC%9D%B4%EC%8D%AC
-2261 mid값 바꾸고 pypy3로 하니까 해결

-2월27일
:이분탐색과 이분탐색에서 upper_bound와 lower_bound찾는 법을 앎

-2월28일
-LIS(12015번):LOWER_BOUND의 정당성 입증 이해하기

1.https://eine.tistory.com/entry/%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4LIS-Longest-Increasing-Subsequence
->Greedy한 성질(가장 마지막에 있는 수가 작을수록 좋다)

2.https://suri78.tistory.com/199
->중간에 이탤릭체로 해놓은 곳을 보면 30이 추가될때 30이 들어갈 수 있는 위치인 50을 30으로 바꾸게 된다.
하지만 저렇게 생성된 부분 수열 [10, 20, 30 70]은 실제로는 생성될 수 없는 수열이다.
그러나 문제 자체가 수열을 구하는 것이 아닌 수열의 길이를 구하는 것이기 때문에 상관이 없게 된다.
30을 추가하더라도 가장 긴 증가하는 부분 수열의 길이는 4라는 것은 변하지 않기 때문이다.*

3.https://ferrante.tistory.com/54


4. 그리디한 성질 + 2번에서 가장 긴 증가하는 부분 수열의 길이를 구하는 것이기 때문에 !!!
5.만약 LIS 자체를 구하는 코드를 원한다면 1번 링크 확인하기

21.3.1
-이분탐색 1300번 문제 해결
(접근방식은 맞았지만 최초 풀이인 algorithm_1300.py은 살짝 에러가 난다. 정답 코드:1300.py 참고하기)

21.3.3
우선순위 큐 모듈 사용 방법
https://www.daleseo.com/python-heapq/
1655번: https://peisea0830.tistory.com/59

21.3.8
2293번
https://pacific-ocean.tistory.com/200

21.3.11
7579번
:https://claude-u.tistory.com/445

21.3.13
dfs와 bfs
2178번 미로탐색
2667번 단지 번호 붙이기
다시 한 번 복습하기

21.4.10
휴가 복귀 및 격리 해제 이후 다시 시작
-2206번 풀이 중요  visited가 3차원인 경우

21.4.30
-2887번 시간 초과 해결 하기(모든 간선의 가중치 검사하면 n**2이다)
-파이썬으로 순열 조합 구현하기

21.6.9
증가하는 부분 수열 문제
이분탐색 및 동적계획으로 푸는 법
21.6.16
외판원 순환 문제